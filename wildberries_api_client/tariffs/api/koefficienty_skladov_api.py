# coding: utf-8

"""
    Tarify

    <p>Tarify na logistiku i hranenie na sklade. Tarify mohno poluhit s lubym tokenom, u kotorogo ne vybrana opcia Testovyi kontur.</p>  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from wildberries_api_client.tariffs.api_client import ApiClient


class KoefficientySkladovApi(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def api_v1_tariffs_box_get(self, _date, **kwargs):  # noqa: E501
        """Tarify dla korobov  # noqa: E501

        <p>Dla tovarov, kotorye postavlautsa na sklad v korobah (korobkah), vozvrahaet stoimost:</p> <ul>   <li>dostavki so sklada ili punkta priema do pokupatela;</li>   <li>dostavki ot pokupatela do punkta priema;</li>   <li>hranenia na sklade Wildberries.</li> </ul> <p>Maksimum — 60 zaprosov v minutu.</p>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.api_v1_tariffs_box_get(_date, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str _date: Data v formate YYYY-MM-DD (required)
        :return: TariffsBoxResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.api_v1_tariffs_box_get_with_http_info(_date, **kwargs)  # noqa: E501
        else:
            (data) = self.api_v1_tariffs_box_get_with_http_info(_date, **kwargs)  # noqa: E501
            return data

    def api_v1_tariffs_box_get_with_http_info(self, _date, **kwargs):  # noqa: E501
        """Tarify dla korobov  # noqa: E501

        <p>Dla tovarov, kotorye postavlautsa na sklad v korobah (korobkah), vozvrahaet stoimost:</p> <ul>   <li>dostavki so sklada ili punkta priema do pokupatela;</li>   <li>dostavki ot pokupatela do punkta priema;</li>   <li>hranenia na sklade Wildberries.</li> </ul> <p>Maksimum — 60 zaprosov v minutu.</p>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.api_v1_tariffs_box_get_with_http_info(_date, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str _date: Data v formate YYYY-MM-DD (required)
        :return: TariffsBoxResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['_date']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method api_v1_tariffs_box_get" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter '_date' is set
        if ('_date' not in params or
                params['_date'] is None):
            raise ValueError("Missing the required parameter `_date` when calling `api_v1_tariffs_box_get`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []
        if '_date' in params:
            query_params.append(('date', params['_date']))  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['HeaderApiKey']  # noqa: E501

        return self.api_client.call_api(
            '/api/v1/tariffs/box', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='TariffsBoxResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def api_v1_tariffs_pallet_get(self, _date, **kwargs):  # noqa: E501
        """Tarify dla monopalet  # noqa: E501

        <p>Dla tovarov, kotorye postavlautsa na sklad Wildberries na monopaletah, vozvrahaet stoimost:</p> <ul>   <li>dostavki so sklada do pokupatela;</li>   <li>dostavki ot pokupatela do sklada;</li>   <li>hranenia na sklade Wildberries.</li> </ul> <p>Maksimum — 60 zaprosov v minutu.</p>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.api_v1_tariffs_pallet_get(_date, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str _date: Data v formate YYYY-MM-DD (required)
        :return: TariffsPalletResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.api_v1_tariffs_pallet_get_with_http_info(_date, **kwargs)  # noqa: E501
        else:
            (data) = self.api_v1_tariffs_pallet_get_with_http_info(_date, **kwargs)  # noqa: E501
            return data

    def api_v1_tariffs_pallet_get_with_http_info(self, _date, **kwargs):  # noqa: E501
        """Tarify dla monopalet  # noqa: E501

        <p>Dla tovarov, kotorye postavlautsa na sklad Wildberries na monopaletah, vozvrahaet stoimost:</p> <ul>   <li>dostavki so sklada do pokupatela;</li>   <li>dostavki ot pokupatela do sklada;</li>   <li>hranenia na sklade Wildberries.</li> </ul> <p>Maksimum — 60 zaprosov v minutu.</p>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.api_v1_tariffs_pallet_get_with_http_info(_date, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str _date: Data v formate YYYY-MM-DD (required)
        :return: TariffsPalletResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['_date']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method api_v1_tariffs_pallet_get" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter '_date' is set
        if ('_date' not in params or
                params['_date'] is None):
            raise ValueError("Missing the required parameter `_date` when calling `api_v1_tariffs_pallet_get`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []
        if '_date' in params:
            query_params.append(('date', params['_date']))  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['HeaderApiKey']  # noqa: E501

        return self.api_client.call_api(
            '/api/v1/tariffs/pallet', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='TariffsPalletResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)
