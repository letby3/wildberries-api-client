# coding: utf-8

"""
    Opisanie API Prodvihenie

    Sinhronizacia dannyh iz bd proishodit raz v 3 minuty.  <br>Izmenenie statusa proishodit raz v 1 minutu. Vnutri etogo intervala budet sohraneno poslednee deistvie po izmeneniu statusa. <br>Izmenenie stavki proishodit raz v 30 sekund. Vnutri etogo intervala budet sohraneno poslednee deistvie po izmeneniu stavki.   # noqa: E501

    OpenAPI spec version: 2.20
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from wildberries_api_client.promotion.api_client import ApiClient


class StavkiApi(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def adv_v0_allcpm_post(self, body, type, **kwargs):  # noqa: E501
        """Spisok stavok po tipu razmehenia kampanii  # noqa: E501

        Metod pozvolaet poluhit spisok stavok po tipu razmehenia kampanii.<br> <br>Dopuskaetsa 5 zaprosov v sekundu.<br>  S pomohu etogo metoda izmenit stavku nevozmohno.<br>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.adv_v0_allcpm_post(body, type, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param V0AllcpmBody body: (required)
        :param int type: <dl> <dt>kampanii:</dt> <dd><code>4</code> - kampania v kataloge</dd> <dd><code>5</code> - kampania v kartohke tovara</dd> <dd><code>6</code> - kampania v poiske</dd> <dd><code>7</code> - kampania v rekomendaciah na glavnoi stranice</dd> </dl>  (required)
        :return: list[InlineResponse2006]
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.adv_v0_allcpm_post_with_http_info(body, type, **kwargs)  # noqa: E501
        else:
            (data) = self.adv_v0_allcpm_post_with_http_info(body, type, **kwargs)  # noqa: E501
            return data

    def adv_v0_allcpm_post_with_http_info(self, body, type, **kwargs):  # noqa: E501
        """Spisok stavok po tipu razmehenia kampanii  # noqa: E501

        Metod pozvolaet poluhit spisok stavok po tipu razmehenia kampanii.<br> <br>Dopuskaetsa 5 zaprosov v sekundu.<br>  S pomohu etogo metoda izmenit stavku nevozmohno.<br>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.adv_v0_allcpm_post_with_http_info(body, type, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param V0AllcpmBody body: (required)
        :param int type: <dl> <dt>kampanii:</dt> <dd><code>4</code> - kampania v kataloge</dd> <dd><code>5</code> - kampania v kartohke tovara</dd> <dd><code>6</code> - kampania v poiske</dd> <dd><code>7</code> - kampania v rekomendaciah na glavnoi stranice</dd> </dl>  (required)
        :return: list[InlineResponse2006]
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body', 'type']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method adv_v0_allcpm_post" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params or
                params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `adv_v0_allcpm_post`")  # noqa: E501
        # verify the required parameter 'type' is set
        if ('type' not in params or
                params['type'] is None):
            raise ValueError("Missing the required parameter `type` when calling `adv_v0_allcpm_post`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'type' in params:
            query_params.append(('type', params['type']))  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['HeaderApiKey']  # noqa: E501

        return self.api_client.call_api(
            '/adv/v0/allcpm', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='list[InlineResponse2006]',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def adv_v0_cpm_get(self, type, param, **kwargs):  # noqa: E501
        """Spisok stavok  # noqa: E501

        Poluhenie spiska stavok dla tipa razmehenia. <br>Dopuskaetsa 5 zaprosov v sekundu. <br>Dannye v otvete otsortirovany po velihine stavki ot bolhei k menhei.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.adv_v0_cpm_get(type, param, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param int type: <dl> <dt>kampanii:</dt> <dd><code>4</code> - kampania v kataloge</dd> <dd><code>5</code> - kampania v kartohke tovara</dd> <dd><code>6</code> - kampania v poiske</dd> <dd><code>7</code> - kampania v rekomendaciah na glavnoi stranice</dd> </dl>  (required)
        :param int param: Parametr zaprosa, po kotoromu budet poluhen spisok stavok aktivnyh kampanii. <br>Dolhen byt znaheniem `menuId`, `subjectId` ili `setId` v zavisimosti ot tipa kampanii. Poluhit ih mohno metodom <b>\"Informacia o kampanii\"</b>  (required)
        :return: list[InlineResponse2005]
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.adv_v0_cpm_get_with_http_info(type, param, **kwargs)  # noqa: E501
        else:
            (data) = self.adv_v0_cpm_get_with_http_info(type, param, **kwargs)  # noqa: E501
            return data

    def adv_v0_cpm_get_with_http_info(self, type, param, **kwargs):  # noqa: E501
        """Spisok stavok  # noqa: E501

        Poluhenie spiska stavok dla tipa razmehenia. <br>Dopuskaetsa 5 zaprosov v sekundu. <br>Dannye v otvete otsortirovany po velihine stavki ot bolhei k menhei.   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.adv_v0_cpm_get_with_http_info(type, param, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param int type: <dl> <dt>kampanii:</dt> <dd><code>4</code> - kampania v kataloge</dd> <dd><code>5</code> - kampania v kartohke tovara</dd> <dd><code>6</code> - kampania v poiske</dd> <dd><code>7</code> - kampania v rekomendaciah na glavnoi stranice</dd> </dl>  (required)
        :param int param: Parametr zaprosa, po kotoromu budet poluhen spisok stavok aktivnyh kampanii. <br>Dolhen byt znaheniem `menuId`, `subjectId` ili `setId` v zavisimosti ot tipa kampanii. Poluhit ih mohno metodom <b>\"Informacia o kampanii\"</b>  (required)
        :return: list[InlineResponse2005]
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['type', 'param']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method adv_v0_cpm_get" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'type' is set
        if ('type' not in params or
                params['type'] is None):
            raise ValueError("Missing the required parameter `type` when calling `adv_v0_cpm_get`")  # noqa: E501
        # verify the required parameter 'param' is set
        if ('param' not in params or
                params['param'] is None):
            raise ValueError("Missing the required parameter `param` when calling `adv_v0_cpm_get`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'type' in params:
            query_params.append(('type', params['type']))  # noqa: E501
        if 'param' in params:
            query_params.append(('param', params['param']))  # noqa: E501

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['HeaderApiKey']  # noqa: E501

        return self.api_client.call_api(
            '/adv/v0/cpm', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='list[InlineResponse2005]',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def adv_v0_cpm_post(self, body, **kwargs):  # noqa: E501
        """Izmenenie stavki u kampanii  # noqa: E501

        Izmenenie stavki u kampanii.<br> Izmenennaa stavka otobrazitsa v informacii o kampanii v tehenie treh minut.<br> Dopuskaetsa 5 zaprosov v sekundu.<br> <br> `Vahno!` Esli ustanavlivaemaa stavka imeet razmer menhe dopustimogo, to v otvet Vy poluhite status-kod 422 (Razmer stavki ne izmenen).<br> Informacia ob izmenenii minimalnogo razmera stavki publikuetsa v razdele Novosti, na portale prodavcov.<br> <br>  `Vahno!` Princip zapolnenia parametrov `type`, `instrument`, `param` pri izmenenii stavki dla kampanii s tipom 9 (poisk + katalog):  <br> Dla `type` ukazyvaetsa znahenie 9 (vsegda). <br> Dla `instrument` ukazyvaetsa znahenie 4 ili 6 v zavisimosti ot togo, v kataloge ili poiske neobhodimo izmenit stavku. <br> Dla `param` vsegda ukazyvaetsa znahenie pola <b>id</b> iz struktury <b>subject</b> otveta metoda \"Informacia o kampanii\", vne zavisimosti ot togo, v kataloge ili poiske izmenaetsa stavka. <br><br>  `Vahno!` Esli v kampanii Poisk + Katalog dostupen tolko Poisk, to ustanovit stavku v Katalog (`instrument` = 4) ne poluhitsa. V otvet Vy poluhite status-kod 422   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.adv_v0_cpm_post(body, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param V0CpmBody body: (required)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.adv_v0_cpm_post_with_http_info(body, **kwargs)  # noqa: E501
        else:
            (data) = self.adv_v0_cpm_post_with_http_info(body, **kwargs)  # noqa: E501
            return data

    def adv_v0_cpm_post_with_http_info(self, body, **kwargs):  # noqa: E501
        """Izmenenie stavki u kampanii  # noqa: E501

        Izmenenie stavki u kampanii.<br> Izmenennaa stavka otobrazitsa v informacii o kampanii v tehenie treh minut.<br> Dopuskaetsa 5 zaprosov v sekundu.<br> <br> `Vahno!` Esli ustanavlivaemaa stavka imeet razmer menhe dopustimogo, to v otvet Vy poluhite status-kod 422 (Razmer stavki ne izmenen).<br> Informacia ob izmenenii minimalnogo razmera stavki publikuetsa v razdele Novosti, na portale prodavcov.<br> <br>  `Vahno!` Princip zapolnenia parametrov `type`, `instrument`, `param` pri izmenenii stavki dla kampanii s tipom 9 (poisk + katalog):  <br> Dla `type` ukazyvaetsa znahenie 9 (vsegda). <br> Dla `instrument` ukazyvaetsa znahenie 4 ili 6 v zavisimosti ot togo, v kataloge ili poiske neobhodimo izmenit stavku. <br> Dla `param` vsegda ukazyvaetsa znahenie pola <b>id</b> iz struktury <b>subject</b> otveta metoda \"Informacia o kampanii\", vne zavisimosti ot togo, v kataloge ili poiske izmenaetsa stavka. <br><br>  `Vahno!` Esli v kampanii Poisk + Katalog dostupen tolko Poisk, to ustanovit stavku v Katalog (`instrument` = 4) ne poluhitsa. V otvet Vy poluhite status-kod 422   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.adv_v0_cpm_post_with_http_info(body, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param V0CpmBody body: (required)
        :return: None
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['body']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method adv_v0_cpm_post" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'body' is set
        if ('body' not in params or
                params['body'] is None):
            raise ValueError("Missing the required parameter `body` when calling `adv_v0_cpm_post`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []

        header_params = {}

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json'])  # noqa: E501

        # Authentication setting
        auth_settings = ['HeaderApiKey']  # noqa: E501

        return self.api_client.call_api(
            '/adv/v0/cpm', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type=None,  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)
