# coding: utf-8

"""
    Opisanie API Statistiki

    S pomohu etih metodov mohno poluhit othety.   # noqa: E501

    OpenAPI spec version: 2.18
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class DetailReportItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'realizationreport_id': 'int',
        'date_from': 'datetime',
        'date_to': 'datetime',
        'create_dt': 'datetime',
        'currency_name': 'str',
        'suppliercontract_code': 'object',
        'rrd_id': 'int',
        'gi_id': 'int',
        'subject_name': 'str',
        'nm_id': 'int',
        'brand_name': 'str',
        'sa_name': 'str',
        'ts_name': 'str',
        'barcode': 'str',
        'doc_type_name': 'str',
        'quantity': 'int',
        'retail_price': 'float',
        'retail_amount': 'float',
        'sale_percent': 'int',
        'commission_percent': 'float',
        'office_name': 'str',
        'supplier_oper_name': 'str',
        'order_dt': 'datetime',
        'sale_dt': 'datetime',
        'rr_dt': 'datetime',
        'shk_id': 'int',
        'retail_price_withdisc_rub': 'float',
        'delivery_amount': 'int',
        'return_amount': 'int',
        'delivery_rub': 'float',
        'gi_box_type_name': 'str',
        'product_discount_for_report': 'float',
        'supplier_promo': 'float',
        'rid': 'int',
        'ppvz_spp_prc': 'float',
        'ppvz_kvw_prc_base': 'float',
        'ppvz_kvw_prc': 'float',
        'sup_rating_prc_up': 'float',
        'is_kgvp_v2': 'float',
        'ppvz_sales_commission': 'float',
        'ppvz_for_pay': 'float',
        'ppvz_reward': 'float',
        'acquiring_fee': 'float',
        'acquiring_bank': 'str',
        'ppvz_vw': 'float',
        'ppvz_vw_nds': 'float',
        'ppvz_office_id': 'int',
        'ppvz_office_name': 'str',
        'ppvz_supplier_id': 'int',
        'ppvz_supplier_name': 'str',
        'ppvz_inn': 'str',
        'declaration_number': 'str',
        'bonus_type_name': 'str',
        'sticker_id': 'str',
        'site_country': 'str',
        'penalty': 'float',
        'additional_payment': 'float',
        'rebill_logistic_cost': 'float',
        'rebill_logistic_org': 'str',
        'kiz': 'str',
        'srid': 'str'
    }

    attribute_map = {
        'realizationreport_id': 'realizationreport_id',
        'date_from': 'date_from',
        'date_to': 'date_to',
        'create_dt': 'create_dt',
        'currency_name': 'currency_name',
        'suppliercontract_code': 'suppliercontract_code',
        'rrd_id': 'rrd_id',
        'gi_id': 'gi_id',
        'subject_name': 'subject_name',
        'nm_id': 'nm_id',
        'brand_name': 'brand_name',
        'sa_name': 'sa_name',
        'ts_name': 'ts_name',
        'barcode': 'barcode',
        'doc_type_name': 'doc_type_name',
        'quantity': 'quantity',
        'retail_price': 'retail_price',
        'retail_amount': 'retail_amount',
        'sale_percent': 'sale_percent',
        'commission_percent': 'commission_percent',
        'office_name': 'office_name',
        'supplier_oper_name': 'supplier_oper_name',
        'order_dt': 'order_dt',
        'sale_dt': 'sale_dt',
        'rr_dt': 'rr_dt',
        'shk_id': 'shk_id',
        'retail_price_withdisc_rub': 'retail_price_withdisc_rub',
        'delivery_amount': 'delivery_amount',
        'return_amount': 'return_amount',
        'delivery_rub': 'delivery_rub',
        'gi_box_type_name': 'gi_box_type_name',
        'product_discount_for_report': 'product_discount_for_report',
        'supplier_promo': 'supplier_promo',
        'rid': 'rid',
        'ppvz_spp_prc': 'ppvz_spp_prc',
        'ppvz_kvw_prc_base': 'ppvz_kvw_prc_base',
        'ppvz_kvw_prc': 'ppvz_kvw_prc',
        'sup_rating_prc_up': 'sup_rating_prc_up',
        'is_kgvp_v2': 'is_kgvp_v2',
        'ppvz_sales_commission': 'ppvz_sales_commission',
        'ppvz_for_pay': 'ppvz_for_pay',
        'ppvz_reward': 'ppvz_reward',
        'acquiring_fee': 'acquiring_fee',
        'acquiring_bank': 'acquiring_bank',
        'ppvz_vw': 'ppvz_vw',
        'ppvz_vw_nds': 'ppvz_vw_nds',
        'ppvz_office_id': 'ppvz_office_id',
        'ppvz_office_name': 'ppvz_office_name',
        'ppvz_supplier_id': 'ppvz_supplier_id',
        'ppvz_supplier_name': 'ppvz_supplier_name',
        'ppvz_inn': 'ppvz_inn',
        'declaration_number': 'declaration_number',
        'bonus_type_name': 'bonus_type_name',
        'sticker_id': 'sticker_id',
        'site_country': 'site_country',
        'penalty': 'penalty',
        'additional_payment': 'additional_payment',
        'rebill_logistic_cost': 'rebill_logistic_cost',
        'rebill_logistic_org': 'rebill_logistic_org',
        'kiz': 'kiz',
        'srid': 'srid'
    }

    def __init__(self, realizationreport_id=None, date_from=None, date_to=None, create_dt=None, currency_name=None, suppliercontract_code=None, rrd_id=None, gi_id=None, subject_name=None, nm_id=None, brand_name=None, sa_name=None, ts_name=None, barcode=None, doc_type_name=None, quantity=None, retail_price=None, retail_amount=None, sale_percent=None, commission_percent=None, office_name=None, supplier_oper_name=None, order_dt=None, sale_dt=None, rr_dt=None, shk_id=None, retail_price_withdisc_rub=None, delivery_amount=None, return_amount=None, delivery_rub=None, gi_box_type_name=None, product_discount_for_report=None, supplier_promo=None, rid=None, ppvz_spp_prc=None, ppvz_kvw_prc_base=None, ppvz_kvw_prc=None, sup_rating_prc_up=None, is_kgvp_v2=None, ppvz_sales_commission=None, ppvz_for_pay=None, ppvz_reward=None, acquiring_fee=None, acquiring_bank=None, ppvz_vw=None, ppvz_vw_nds=None, ppvz_office_id=None, ppvz_office_name=None, ppvz_supplier_id=None, ppvz_supplier_name=None, ppvz_inn=None, declaration_number=None, bonus_type_name=None, sticker_id=None, site_country=None, penalty=None, additional_payment=None, rebill_logistic_cost=None, rebill_logistic_org=None, kiz=None, srid=None):  # noqa: E501
        """DetailReportItem - a model defined in Swagger"""  # noqa: E501
        self._realizationreport_id = None
        self._date_from = None
        self._date_to = None
        self._create_dt = None
        self._currency_name = None
        self._suppliercontract_code = None
        self._rrd_id = None
        self._gi_id = None
        self._subject_name = None
        self._nm_id = None
        self._brand_name = None
        self._sa_name = None
        self._ts_name = None
        self._barcode = None
        self._doc_type_name = None
        self._quantity = None
        self._retail_price = None
        self._retail_amount = None
        self._sale_percent = None
        self._commission_percent = None
        self._office_name = None
        self._supplier_oper_name = None
        self._order_dt = None
        self._sale_dt = None
        self._rr_dt = None
        self._shk_id = None
        self._retail_price_withdisc_rub = None
        self._delivery_amount = None
        self._return_amount = None
        self._delivery_rub = None
        self._gi_box_type_name = None
        self._product_discount_for_report = None
        self._supplier_promo = None
        self._rid = None
        self._ppvz_spp_prc = None
        self._ppvz_kvw_prc_base = None
        self._ppvz_kvw_prc = None
        self._sup_rating_prc_up = None
        self._is_kgvp_v2 = None
        self._ppvz_sales_commission = None
        self._ppvz_for_pay = None
        self._ppvz_reward = None
        self._acquiring_fee = None
        self._acquiring_bank = None
        self._ppvz_vw = None
        self._ppvz_vw_nds = None
        self._ppvz_office_id = None
        self._ppvz_office_name = None
        self._ppvz_supplier_id = None
        self._ppvz_supplier_name = None
        self._ppvz_inn = None
        self._declaration_number = None
        self._bonus_type_name = None
        self._sticker_id = None
        self._site_country = None
        self._penalty = None
        self._additional_payment = None
        self._rebill_logistic_cost = None
        self._rebill_logistic_org = None
        self._kiz = None
        self._srid = None
        self.discriminator = None
        if realizationreport_id is not None:
            self.realizationreport_id = realizationreport_id
        if date_from is not None:
            self.date_from = date_from
        if date_to is not None:
            self.date_to = date_to
        if create_dt is not None:
            self.create_dt = create_dt
        if currency_name is not None:
            self.currency_name = currency_name
        if suppliercontract_code is not None:
            self.suppliercontract_code = suppliercontract_code
        if rrd_id is not None:
            self.rrd_id = rrd_id
        if gi_id is not None:
            self.gi_id = gi_id
        if subject_name is not None:
            self.subject_name = subject_name
        if nm_id is not None:
            self.nm_id = nm_id
        if brand_name is not None:
            self.brand_name = brand_name
        if sa_name is not None:
            self.sa_name = sa_name
        if ts_name is not None:
            self.ts_name = ts_name
        if barcode is not None:
            self.barcode = barcode
        if doc_type_name is not None:
            self.doc_type_name = doc_type_name
        if quantity is not None:
            self.quantity = quantity
        if retail_price is not None:
            self.retail_price = retail_price
        if retail_amount is not None:
            self.retail_amount = retail_amount
        if sale_percent is not None:
            self.sale_percent = sale_percent
        if commission_percent is not None:
            self.commission_percent = commission_percent
        if office_name is not None:
            self.office_name = office_name
        if supplier_oper_name is not None:
            self.supplier_oper_name = supplier_oper_name
        if order_dt is not None:
            self.order_dt = order_dt
        if sale_dt is not None:
            self.sale_dt = sale_dt
        if rr_dt is not None:
            self.rr_dt = rr_dt
        if shk_id is not None:
            self.shk_id = shk_id
        if retail_price_withdisc_rub is not None:
            self.retail_price_withdisc_rub = retail_price_withdisc_rub
        if delivery_amount is not None:
            self.delivery_amount = delivery_amount
        if return_amount is not None:
            self.return_amount = return_amount
        if delivery_rub is not None:
            self.delivery_rub = delivery_rub
        if gi_box_type_name is not None:
            self.gi_box_type_name = gi_box_type_name
        if product_discount_for_report is not None:
            self.product_discount_for_report = product_discount_for_report
        if supplier_promo is not None:
            self.supplier_promo = supplier_promo
        if rid is not None:
            self.rid = rid
        if ppvz_spp_prc is not None:
            self.ppvz_spp_prc = ppvz_spp_prc
        if ppvz_kvw_prc_base is not None:
            self.ppvz_kvw_prc_base = ppvz_kvw_prc_base
        if ppvz_kvw_prc is not None:
            self.ppvz_kvw_prc = ppvz_kvw_prc
        if sup_rating_prc_up is not None:
            self.sup_rating_prc_up = sup_rating_prc_up
        if is_kgvp_v2 is not None:
            self.is_kgvp_v2 = is_kgvp_v2
        if ppvz_sales_commission is not None:
            self.ppvz_sales_commission = ppvz_sales_commission
        if ppvz_for_pay is not None:
            self.ppvz_for_pay = ppvz_for_pay
        if ppvz_reward is not None:
            self.ppvz_reward = ppvz_reward
        if acquiring_fee is not None:
            self.acquiring_fee = acquiring_fee
        if acquiring_bank is not None:
            self.acquiring_bank = acquiring_bank
        if ppvz_vw is not None:
            self.ppvz_vw = ppvz_vw
        if ppvz_vw_nds is not None:
            self.ppvz_vw_nds = ppvz_vw_nds
        if ppvz_office_id is not None:
            self.ppvz_office_id = ppvz_office_id
        if ppvz_office_name is not None:
            self.ppvz_office_name = ppvz_office_name
        if ppvz_supplier_id is not None:
            self.ppvz_supplier_id = ppvz_supplier_id
        if ppvz_supplier_name is not None:
            self.ppvz_supplier_name = ppvz_supplier_name
        if ppvz_inn is not None:
            self.ppvz_inn = ppvz_inn
        if declaration_number is not None:
            self.declaration_number = declaration_number
        if bonus_type_name is not None:
            self.bonus_type_name = bonus_type_name
        if sticker_id is not None:
            self.sticker_id = sticker_id
        if site_country is not None:
            self.site_country = site_country
        if penalty is not None:
            self.penalty = penalty
        if additional_payment is not None:
            self.additional_payment = additional_payment
        if rebill_logistic_cost is not None:
            self.rebill_logistic_cost = rebill_logistic_cost
        if rebill_logistic_org is not None:
            self.rebill_logistic_org = rebill_logistic_org
        if kiz is not None:
            self.kiz = kiz
        if srid is not None:
            self.srid = srid

    @property
    def realizationreport_id(self):
        """Gets the realizationreport_id of this DetailReportItem.  # noqa: E501

        Nomer otheta  # noqa: E501

        :return: The realizationreport_id of this DetailReportItem.  # noqa: E501
        :rtype: int
        """
        return self._realizationreport_id

    @realizationreport_id.setter
    def realizationreport_id(self, realizationreport_id):
        """Sets the realizationreport_id of this DetailReportItem.

        Nomer otheta  # noqa: E501

        :param realizationreport_id: The realizationreport_id of this DetailReportItem.  # noqa: E501
        :type: int
        """

        self._realizationreport_id = realizationreport_id

    @property
    def date_from(self):
        """Gets the date_from of this DetailReportItem.  # noqa: E501

        Data nahala othetnogo perioda  # noqa: E501

        :return: The date_from of this DetailReportItem.  # noqa: E501
        :rtype: datetime
        """
        return self._date_from

    @date_from.setter
    def date_from(self, date_from):
        """Sets the date_from of this DetailReportItem.

        Data nahala othetnogo perioda  # noqa: E501

        :param date_from: The date_from of this DetailReportItem.  # noqa: E501
        :type: datetime
        """

        self._date_from = date_from

    @property
    def date_to(self):
        """Gets the date_to of this DetailReportItem.  # noqa: E501

        Data konca othetnogo perioda  # noqa: E501

        :return: The date_to of this DetailReportItem.  # noqa: E501
        :rtype: datetime
        """
        return self._date_to

    @date_to.setter
    def date_to(self, date_to):
        """Sets the date_to of this DetailReportItem.

        Data konca othetnogo perioda  # noqa: E501

        :param date_to: The date_to of this DetailReportItem.  # noqa: E501
        :type: datetime
        """

        self._date_to = date_to

    @property
    def create_dt(self):
        """Gets the create_dt of this DetailReportItem.  # noqa: E501

        Data formirovania otheta  # noqa: E501

        :return: The create_dt of this DetailReportItem.  # noqa: E501
        :rtype: datetime
        """
        return self._create_dt

    @create_dt.setter
    def create_dt(self, create_dt):
        """Sets the create_dt of this DetailReportItem.

        Data formirovania otheta  # noqa: E501

        :param create_dt: The create_dt of this DetailReportItem.  # noqa: E501
        :type: datetime
        """

        self._create_dt = create_dt

    @property
    def currency_name(self):
        """Gets the currency_name of this DetailReportItem.  # noqa: E501

        Valuta otheta  # noqa: E501

        :return: The currency_name of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._currency_name

    @currency_name.setter
    def currency_name(self, currency_name):
        """Sets the currency_name of this DetailReportItem.

        Valuta otheta  # noqa: E501

        :param currency_name: The currency_name of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._currency_name = currency_name

    @property
    def suppliercontract_code(self):
        """Gets the suppliercontract_code of this DetailReportItem.  # noqa: E501

        Dogovor  # noqa: E501

        :return: The suppliercontract_code of this DetailReportItem.  # noqa: E501
        :rtype: object
        """
        return self._suppliercontract_code

    @suppliercontract_code.setter
    def suppliercontract_code(self, suppliercontract_code):
        """Sets the suppliercontract_code of this DetailReportItem.

        Dogovor  # noqa: E501

        :param suppliercontract_code: The suppliercontract_code of this DetailReportItem.  # noqa: E501
        :type: object
        """

        self._suppliercontract_code = suppliercontract_code

    @property
    def rrd_id(self):
        """Gets the rrd_id of this DetailReportItem.  # noqa: E501

        Nomer stroki  # noqa: E501

        :return: The rrd_id of this DetailReportItem.  # noqa: E501
        :rtype: int
        """
        return self._rrd_id

    @rrd_id.setter
    def rrd_id(self, rrd_id):
        """Sets the rrd_id of this DetailReportItem.

        Nomer stroki  # noqa: E501

        :param rrd_id: The rrd_id of this DetailReportItem.  # noqa: E501
        :type: int
        """

        self._rrd_id = rrd_id

    @property
    def gi_id(self):
        """Gets the gi_id of this DetailReportItem.  # noqa: E501

        Nomer postavki  # noqa: E501

        :return: The gi_id of this DetailReportItem.  # noqa: E501
        :rtype: int
        """
        return self._gi_id

    @gi_id.setter
    def gi_id(self, gi_id):
        """Sets the gi_id of this DetailReportItem.

        Nomer postavki  # noqa: E501

        :param gi_id: The gi_id of this DetailReportItem.  # noqa: E501
        :type: int
        """

        self._gi_id = gi_id

    @property
    def subject_name(self):
        """Gets the subject_name of this DetailReportItem.  # noqa: E501

        Predmet  # noqa: E501

        :return: The subject_name of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._subject_name

    @subject_name.setter
    def subject_name(self, subject_name):
        """Sets the subject_name of this DetailReportItem.

        Predmet  # noqa: E501

        :param subject_name: The subject_name of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._subject_name = subject_name

    @property
    def nm_id(self):
        """Gets the nm_id of this DetailReportItem.  # noqa: E501

        Artikul WB  # noqa: E501

        :return: The nm_id of this DetailReportItem.  # noqa: E501
        :rtype: int
        """
        return self._nm_id

    @nm_id.setter
    def nm_id(self, nm_id):
        """Sets the nm_id of this DetailReportItem.

        Artikul WB  # noqa: E501

        :param nm_id: The nm_id of this DetailReportItem.  # noqa: E501
        :type: int
        """

        self._nm_id = nm_id

    @property
    def brand_name(self):
        """Gets the brand_name of this DetailReportItem.  # noqa: E501

        Brend  # noqa: E501

        :return: The brand_name of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._brand_name

    @brand_name.setter
    def brand_name(self, brand_name):
        """Sets the brand_name of this DetailReportItem.

        Brend  # noqa: E501

        :param brand_name: The brand_name of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._brand_name = brand_name

    @property
    def sa_name(self):
        """Gets the sa_name of this DetailReportItem.  # noqa: E501

        Artikul prodavca  # noqa: E501

        :return: The sa_name of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._sa_name

    @sa_name.setter
    def sa_name(self, sa_name):
        """Sets the sa_name of this DetailReportItem.

        Artikul prodavca  # noqa: E501

        :param sa_name: The sa_name of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._sa_name = sa_name

    @property
    def ts_name(self):
        """Gets the ts_name of this DetailReportItem.  # noqa: E501

        Razmer  # noqa: E501

        :return: The ts_name of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._ts_name

    @ts_name.setter
    def ts_name(self, ts_name):
        """Sets the ts_name of this DetailReportItem.

        Razmer  # noqa: E501

        :param ts_name: The ts_name of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._ts_name = ts_name

    @property
    def barcode(self):
        """Gets the barcode of this DetailReportItem.  # noqa: E501

        Barkod  # noqa: E501

        :return: The barcode of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._barcode

    @barcode.setter
    def barcode(self, barcode):
        """Sets the barcode of this DetailReportItem.

        Barkod  # noqa: E501

        :param barcode: The barcode of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._barcode = barcode

    @property
    def doc_type_name(self):
        """Gets the doc_type_name of this DetailReportItem.  # noqa: E501

        Tip dokumenta  # noqa: E501

        :return: The doc_type_name of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._doc_type_name

    @doc_type_name.setter
    def doc_type_name(self, doc_type_name):
        """Sets the doc_type_name of this DetailReportItem.

        Tip dokumenta  # noqa: E501

        :param doc_type_name: The doc_type_name of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._doc_type_name = doc_type_name

    @property
    def quantity(self):
        """Gets the quantity of this DetailReportItem.  # noqa: E501

        Kolihestvo  # noqa: E501

        :return: The quantity of this DetailReportItem.  # noqa: E501
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this DetailReportItem.

        Kolihestvo  # noqa: E501

        :param quantity: The quantity of this DetailReportItem.  # noqa: E501
        :type: int
        """

        self._quantity = quantity

    @property
    def retail_price(self):
        """Gets the retail_price of this DetailReportItem.  # noqa: E501

        cena roznihnaa  # noqa: E501

        :return: The retail_price of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._retail_price

    @retail_price.setter
    def retail_price(self, retail_price):
        """Sets the retail_price of this DetailReportItem.

        cena roznihnaa  # noqa: E501

        :param retail_price: The retail_price of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._retail_price = retail_price

    @property
    def retail_amount(self):
        """Gets the retail_amount of this DetailReportItem.  # noqa: E501

        Summa prodah (vozvratov)  # noqa: E501

        :return: The retail_amount of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._retail_amount

    @retail_amount.setter
    def retail_amount(self, retail_amount):
        """Sets the retail_amount of this DetailReportItem.

        Summa prodah (vozvratov)  # noqa: E501

        :param retail_amount: The retail_amount of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._retail_amount = retail_amount

    @property
    def sale_percent(self):
        """Gets the sale_percent of this DetailReportItem.  # noqa: E501

        Soglasovannaa skidka  # noqa: E501

        :return: The sale_percent of this DetailReportItem.  # noqa: E501
        :rtype: int
        """
        return self._sale_percent

    @sale_percent.setter
    def sale_percent(self, sale_percent):
        """Sets the sale_percent of this DetailReportItem.

        Soglasovannaa skidka  # noqa: E501

        :param sale_percent: The sale_percent of this DetailReportItem.  # noqa: E501
        :type: int
        """

        self._sale_percent = sale_percent

    @property
    def commission_percent(self):
        """Gets the commission_percent of this DetailReportItem.  # noqa: E501

        Procent komissii  # noqa: E501

        :return: The commission_percent of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._commission_percent

    @commission_percent.setter
    def commission_percent(self, commission_percent):
        """Sets the commission_percent of this DetailReportItem.

        Procent komissii  # noqa: E501

        :param commission_percent: The commission_percent of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._commission_percent = commission_percent

    @property
    def office_name(self):
        """Gets the office_name of this DetailReportItem.  # noqa: E501

        Sklad  # noqa: E501

        :return: The office_name of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._office_name

    @office_name.setter
    def office_name(self, office_name):
        """Sets the office_name of this DetailReportItem.

        Sklad  # noqa: E501

        :param office_name: The office_name of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._office_name = office_name

    @property
    def supplier_oper_name(self):
        """Gets the supplier_oper_name of this DetailReportItem.  # noqa: E501

        Obosnovanie dla oplaty  # noqa: E501

        :return: The supplier_oper_name of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._supplier_oper_name

    @supplier_oper_name.setter
    def supplier_oper_name(self, supplier_oper_name):
        """Sets the supplier_oper_name of this DetailReportItem.

        Obosnovanie dla oplaty  # noqa: E501

        :param supplier_oper_name: The supplier_oper_name of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._supplier_oper_name = supplier_oper_name

    @property
    def order_dt(self):
        """Gets the order_dt of this DetailReportItem.  # noqa: E501

        Data zakaza. <br> Prisylaetsa s avnym ukazaniem hasovogo poasa  # noqa: E501

        :return: The order_dt of this DetailReportItem.  # noqa: E501
        :rtype: datetime
        """
        return self._order_dt

    @order_dt.setter
    def order_dt(self, order_dt):
        """Sets the order_dt of this DetailReportItem.

        Data zakaza. <br> Prisylaetsa s avnym ukazaniem hasovogo poasa  # noqa: E501

        :param order_dt: The order_dt of this DetailReportItem.  # noqa: E501
        :type: datetime
        """

        self._order_dt = order_dt

    @property
    def sale_dt(self):
        """Gets the sale_dt of this DetailReportItem.  # noqa: E501

        Data prodahi. <br> Prisylaetsa s avnym ukazaniem hasovogo poasa  # noqa: E501

        :return: The sale_dt of this DetailReportItem.  # noqa: E501
        :rtype: datetime
        """
        return self._sale_dt

    @sale_dt.setter
    def sale_dt(self, sale_dt):
        """Sets the sale_dt of this DetailReportItem.

        Data prodahi. <br> Prisylaetsa s avnym ukazaniem hasovogo poasa  # noqa: E501

        :param sale_dt: The sale_dt of this DetailReportItem.  # noqa: E501
        :type: datetime
        """

        self._sale_dt = sale_dt

    @property
    def rr_dt(self):
        """Gets the rr_dt of this DetailReportItem.  # noqa: E501

        Data operacii. <br> Prisylaetsa s avnym ukazaniem hasovogo poasa  # noqa: E501

        :return: The rr_dt of this DetailReportItem.  # noqa: E501
        :rtype: datetime
        """
        return self._rr_dt

    @rr_dt.setter
    def rr_dt(self, rr_dt):
        """Sets the rr_dt of this DetailReportItem.

        Data operacii. <br> Prisylaetsa s avnym ukazaniem hasovogo poasa  # noqa: E501

        :param rr_dt: The rr_dt of this DetailReportItem.  # noqa: E501
        :type: datetime
        """

        self._rr_dt = rr_dt

    @property
    def shk_id(self):
        """Gets the shk_id of this DetailReportItem.  # noqa: E501

        htrih-kod  # noqa: E501

        :return: The shk_id of this DetailReportItem.  # noqa: E501
        :rtype: int
        """
        return self._shk_id

    @shk_id.setter
    def shk_id(self, shk_id):
        """Sets the shk_id of this DetailReportItem.

        htrih-kod  # noqa: E501

        :param shk_id: The shk_id of this DetailReportItem.  # noqa: E501
        :type: int
        """

        self._shk_id = shk_id

    @property
    def retail_price_withdisc_rub(self):
        """Gets the retail_price_withdisc_rub of this DetailReportItem.  # noqa: E501

        cena roznihnaa s uhetom soglasovannoi skidki  # noqa: E501

        :return: The retail_price_withdisc_rub of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._retail_price_withdisc_rub

    @retail_price_withdisc_rub.setter
    def retail_price_withdisc_rub(self, retail_price_withdisc_rub):
        """Sets the retail_price_withdisc_rub of this DetailReportItem.

        cena roznihnaa s uhetom soglasovannoi skidki  # noqa: E501

        :param retail_price_withdisc_rub: The retail_price_withdisc_rub of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._retail_price_withdisc_rub = retail_price_withdisc_rub

    @property
    def delivery_amount(self):
        """Gets the delivery_amount of this DetailReportItem.  # noqa: E501

        Kolihestvo dostavok  # noqa: E501

        :return: The delivery_amount of this DetailReportItem.  # noqa: E501
        :rtype: int
        """
        return self._delivery_amount

    @delivery_amount.setter
    def delivery_amount(self, delivery_amount):
        """Sets the delivery_amount of this DetailReportItem.

        Kolihestvo dostavok  # noqa: E501

        :param delivery_amount: The delivery_amount of this DetailReportItem.  # noqa: E501
        :type: int
        """

        self._delivery_amount = delivery_amount

    @property
    def return_amount(self):
        """Gets the return_amount of this DetailReportItem.  # noqa: E501

        Kolihestvo vozvratov  # noqa: E501

        :return: The return_amount of this DetailReportItem.  # noqa: E501
        :rtype: int
        """
        return self._return_amount

    @return_amount.setter
    def return_amount(self, return_amount):
        """Sets the return_amount of this DetailReportItem.

        Kolihestvo vozvratov  # noqa: E501

        :param return_amount: The return_amount of this DetailReportItem.  # noqa: E501
        :type: int
        """

        self._return_amount = return_amount

    @property
    def delivery_rub(self):
        """Gets the delivery_rub of this DetailReportItem.  # noqa: E501

        Stoimost logistiki  # noqa: E501

        :return: The delivery_rub of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._delivery_rub

    @delivery_rub.setter
    def delivery_rub(self, delivery_rub):
        """Sets the delivery_rub of this DetailReportItem.

        Stoimost logistiki  # noqa: E501

        :param delivery_rub: The delivery_rub of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._delivery_rub = delivery_rub

    @property
    def gi_box_type_name(self):
        """Gets the gi_box_type_name of this DetailReportItem.  # noqa: E501

        Tip korobov  # noqa: E501

        :return: The gi_box_type_name of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._gi_box_type_name

    @gi_box_type_name.setter
    def gi_box_type_name(self, gi_box_type_name):
        """Sets the gi_box_type_name of this DetailReportItem.

        Tip korobov  # noqa: E501

        :param gi_box_type_name: The gi_box_type_name of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._gi_box_type_name = gi_box_type_name

    @property
    def product_discount_for_report(self):
        """Gets the product_discount_for_report of this DetailReportItem.  # noqa: E501

        Soglasovannyi produktovyi diskont  # noqa: E501

        :return: The product_discount_for_report of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._product_discount_for_report

    @product_discount_for_report.setter
    def product_discount_for_report(self, product_discount_for_report):
        """Sets the product_discount_for_report of this DetailReportItem.

        Soglasovannyi produktovyi diskont  # noqa: E501

        :param product_discount_for_report: The product_discount_for_report of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._product_discount_for_report = product_discount_for_report

    @property
    def supplier_promo(self):
        """Gets the supplier_promo of this DetailReportItem.  # noqa: E501

        Promokod  # noqa: E501

        :return: The supplier_promo of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._supplier_promo

    @supplier_promo.setter
    def supplier_promo(self, supplier_promo):
        """Sets the supplier_promo of this DetailReportItem.

        Promokod  # noqa: E501

        :param supplier_promo: The supplier_promo of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._supplier_promo = supplier_promo

    @property
    def rid(self):
        """Gets the rid of this DetailReportItem.  # noqa: E501

        Unikalnyi identifikator zakaza  # noqa: E501

        :return: The rid of this DetailReportItem.  # noqa: E501
        :rtype: int
        """
        return self._rid

    @rid.setter
    def rid(self, rid):
        """Sets the rid of this DetailReportItem.

        Unikalnyi identifikator zakaza  # noqa: E501

        :param rid: The rid of this DetailReportItem.  # noqa: E501
        :type: int
        """

        self._rid = rid

    @property
    def ppvz_spp_prc(self):
        """Gets the ppvz_spp_prc of this DetailReportItem.  # noqa: E501

        Skidka postoannogo pokupatela  # noqa: E501

        :return: The ppvz_spp_prc of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._ppvz_spp_prc

    @ppvz_spp_prc.setter
    def ppvz_spp_prc(self, ppvz_spp_prc):
        """Sets the ppvz_spp_prc of this DetailReportItem.

        Skidka postoannogo pokupatela  # noqa: E501

        :param ppvz_spp_prc: The ppvz_spp_prc of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._ppvz_spp_prc = ppvz_spp_prc

    @property
    def ppvz_kvw_prc_base(self):
        """Gets the ppvz_kvw_prc_base of this DetailReportItem.  # noqa: E501

        Razmer kVV bez NDS, % bazovyi  # noqa: E501

        :return: The ppvz_kvw_prc_base of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._ppvz_kvw_prc_base

    @ppvz_kvw_prc_base.setter
    def ppvz_kvw_prc_base(self, ppvz_kvw_prc_base):
        """Sets the ppvz_kvw_prc_base of this DetailReportItem.

        Razmer kVV bez NDS, % bazovyi  # noqa: E501

        :param ppvz_kvw_prc_base: The ppvz_kvw_prc_base of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._ppvz_kvw_prc_base = ppvz_kvw_prc_base

    @property
    def ppvz_kvw_prc(self):
        """Gets the ppvz_kvw_prc of this DetailReportItem.  # noqa: E501

        Itogovyi kVV bez NDS, %  # noqa: E501

        :return: The ppvz_kvw_prc of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._ppvz_kvw_prc

    @ppvz_kvw_prc.setter
    def ppvz_kvw_prc(self, ppvz_kvw_prc):
        """Sets the ppvz_kvw_prc of this DetailReportItem.

        Itogovyi kVV bez NDS, %  # noqa: E501

        :param ppvz_kvw_prc: The ppvz_kvw_prc of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._ppvz_kvw_prc = ppvz_kvw_prc

    @property
    def sup_rating_prc_up(self):
        """Gets the sup_rating_prc_up of this DetailReportItem.  # noqa: E501

        Razmer snihenia kVV iz-za reitinga  # noqa: E501

        :return: The sup_rating_prc_up of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._sup_rating_prc_up

    @sup_rating_prc_up.setter
    def sup_rating_prc_up(self, sup_rating_prc_up):
        """Sets the sup_rating_prc_up of this DetailReportItem.

        Razmer snihenia kVV iz-za reitinga  # noqa: E501

        :param sup_rating_prc_up: The sup_rating_prc_up of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._sup_rating_prc_up = sup_rating_prc_up

    @property
    def is_kgvp_v2(self):
        """Gets the is_kgvp_v2 of this DetailReportItem.  # noqa: E501

        Razmer snihenia kVV iz-za akcii  # noqa: E501

        :return: The is_kgvp_v2 of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._is_kgvp_v2

    @is_kgvp_v2.setter
    def is_kgvp_v2(self, is_kgvp_v2):
        """Sets the is_kgvp_v2 of this DetailReportItem.

        Razmer snihenia kVV iz-za akcii  # noqa: E501

        :param is_kgvp_v2: The is_kgvp_v2 of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._is_kgvp_v2 = is_kgvp_v2

    @property
    def ppvz_sales_commission(self):
        """Gets the ppvz_sales_commission of this DetailReportItem.  # noqa: E501

        Voznagrahdenie s prodah do vyheta uslug poverennogo, bez NDS  # noqa: E501

        :return: The ppvz_sales_commission of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._ppvz_sales_commission

    @ppvz_sales_commission.setter
    def ppvz_sales_commission(self, ppvz_sales_commission):
        """Sets the ppvz_sales_commission of this DetailReportItem.

        Voznagrahdenie s prodah do vyheta uslug poverennogo, bez NDS  # noqa: E501

        :param ppvz_sales_commission: The ppvz_sales_commission of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._ppvz_sales_commission = ppvz_sales_commission

    @property
    def ppvz_for_pay(self):
        """Gets the ppvz_for_pay of this DetailReportItem.  # noqa: E501

        K perehisleniu prodavcu za realizovannyi tovar  # noqa: E501

        :return: The ppvz_for_pay of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._ppvz_for_pay

    @ppvz_for_pay.setter
    def ppvz_for_pay(self, ppvz_for_pay):
        """Sets the ppvz_for_pay of this DetailReportItem.

        K perehisleniu prodavcu za realizovannyi tovar  # noqa: E501

        :param ppvz_for_pay: The ppvz_for_pay of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._ppvz_for_pay = ppvz_for_pay

    @property
    def ppvz_reward(self):
        """Gets the ppvz_reward of this DetailReportItem.  # noqa: E501

        Vozmehenie za vydahu i vozvrat tovarov na PVZ  # noqa: E501

        :return: The ppvz_reward of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._ppvz_reward

    @ppvz_reward.setter
    def ppvz_reward(self, ppvz_reward):
        """Sets the ppvz_reward of this DetailReportItem.

        Vozmehenie za vydahu i vozvrat tovarov na PVZ  # noqa: E501

        :param ppvz_reward: The ppvz_reward of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._ppvz_reward = ppvz_reward

    @property
    def acquiring_fee(self):
        """Gets the acquiring_fee of this DetailReportItem.  # noqa: E501

        Vozmehenie izderhek po ekvairingu. <br> Izderhki WB za uslugi ekvairinga: vyhitautsa iz voznagrahdenia WB i ne vliaut na dohod prodavca.   # noqa: E501

        :return: The acquiring_fee of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._acquiring_fee

    @acquiring_fee.setter
    def acquiring_fee(self, acquiring_fee):
        """Sets the acquiring_fee of this DetailReportItem.

        Vozmehenie izderhek po ekvairingu. <br> Izderhki WB za uslugi ekvairinga: vyhitautsa iz voznagrahdenia WB i ne vliaut na dohod prodavca.   # noqa: E501

        :param acquiring_fee: The acquiring_fee of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._acquiring_fee = acquiring_fee

    @property
    def acquiring_bank(self):
        """Gets the acquiring_bank of this DetailReportItem.  # noqa: E501

        Naimenovanie banka-ekvaiera  # noqa: E501

        :return: The acquiring_bank of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._acquiring_bank

    @acquiring_bank.setter
    def acquiring_bank(self, acquiring_bank):
        """Sets the acquiring_bank of this DetailReportItem.

        Naimenovanie banka-ekvaiera  # noqa: E501

        :param acquiring_bank: The acquiring_bank of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._acquiring_bank = acquiring_bank

    @property
    def ppvz_vw(self):
        """Gets the ppvz_vw of this DetailReportItem.  # noqa: E501

        Voznagrahdenie WB bez NDS  # noqa: E501

        :return: The ppvz_vw of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._ppvz_vw

    @ppvz_vw.setter
    def ppvz_vw(self, ppvz_vw):
        """Sets the ppvz_vw of this DetailReportItem.

        Voznagrahdenie WB bez NDS  # noqa: E501

        :param ppvz_vw: The ppvz_vw of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._ppvz_vw = ppvz_vw

    @property
    def ppvz_vw_nds(self):
        """Gets the ppvz_vw_nds of this DetailReportItem.  # noqa: E501

        NDS s voznagrahdenia WB  # noqa: E501

        :return: The ppvz_vw_nds of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._ppvz_vw_nds

    @ppvz_vw_nds.setter
    def ppvz_vw_nds(self, ppvz_vw_nds):
        """Sets the ppvz_vw_nds of this DetailReportItem.

        NDS s voznagrahdenia WB  # noqa: E501

        :param ppvz_vw_nds: The ppvz_vw_nds of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._ppvz_vw_nds = ppvz_vw_nds

    @property
    def ppvz_office_id(self):
        """Gets the ppvz_office_id of this DetailReportItem.  # noqa: E501

        Nomer ofisa  # noqa: E501

        :return: The ppvz_office_id of this DetailReportItem.  # noqa: E501
        :rtype: int
        """
        return self._ppvz_office_id

    @ppvz_office_id.setter
    def ppvz_office_id(self, ppvz_office_id):
        """Sets the ppvz_office_id of this DetailReportItem.

        Nomer ofisa  # noqa: E501

        :param ppvz_office_id: The ppvz_office_id of this DetailReportItem.  # noqa: E501
        :type: int
        """

        self._ppvz_office_id = ppvz_office_id

    @property
    def ppvz_office_name(self):
        """Gets the ppvz_office_name of this DetailReportItem.  # noqa: E501

        Naimenovanie ofisa dostavki  # noqa: E501

        :return: The ppvz_office_name of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._ppvz_office_name

    @ppvz_office_name.setter
    def ppvz_office_name(self, ppvz_office_name):
        """Sets the ppvz_office_name of this DetailReportItem.

        Naimenovanie ofisa dostavki  # noqa: E501

        :param ppvz_office_name: The ppvz_office_name of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._ppvz_office_name = ppvz_office_name

    @property
    def ppvz_supplier_id(self):
        """Gets the ppvz_supplier_id of this DetailReportItem.  # noqa: E501

        Nomer partnera  # noqa: E501

        :return: The ppvz_supplier_id of this DetailReportItem.  # noqa: E501
        :rtype: int
        """
        return self._ppvz_supplier_id

    @ppvz_supplier_id.setter
    def ppvz_supplier_id(self, ppvz_supplier_id):
        """Sets the ppvz_supplier_id of this DetailReportItem.

        Nomer partnera  # noqa: E501

        :param ppvz_supplier_id: The ppvz_supplier_id of this DetailReportItem.  # noqa: E501
        :type: int
        """

        self._ppvz_supplier_id = ppvz_supplier_id

    @property
    def ppvz_supplier_name(self):
        """Gets the ppvz_supplier_name of this DetailReportItem.  # noqa: E501

        Partner  # noqa: E501

        :return: The ppvz_supplier_name of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._ppvz_supplier_name

    @ppvz_supplier_name.setter
    def ppvz_supplier_name(self, ppvz_supplier_name):
        """Sets the ppvz_supplier_name of this DetailReportItem.

        Partner  # noqa: E501

        :param ppvz_supplier_name: The ppvz_supplier_name of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._ppvz_supplier_name = ppvz_supplier_name

    @property
    def ppvz_inn(self):
        """Gets the ppvz_inn of this DetailReportItem.  # noqa: E501

        INN partnera  # noqa: E501

        :return: The ppvz_inn of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._ppvz_inn

    @ppvz_inn.setter
    def ppvz_inn(self, ppvz_inn):
        """Sets the ppvz_inn of this DetailReportItem.

        INN partnera  # noqa: E501

        :param ppvz_inn: The ppvz_inn of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._ppvz_inn = ppvz_inn

    @property
    def declaration_number(self):
        """Gets the declaration_number of this DetailReportItem.  # noqa: E501

        Nomer tamohennoi deklaracii  # noqa: E501

        :return: The declaration_number of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._declaration_number

    @declaration_number.setter
    def declaration_number(self, declaration_number):
        """Sets the declaration_number of this DetailReportItem.

        Nomer tamohennoi deklaracii  # noqa: E501

        :param declaration_number: The declaration_number of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._declaration_number = declaration_number

    @property
    def bonus_type_name(self):
        """Gets the bonus_type_name of this DetailReportItem.  # noqa: E501

        Obosnovanie htrafov i doplat. <br> Pole budet v otvete pri nalihii znahenia   # noqa: E501

        :return: The bonus_type_name of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._bonus_type_name

    @bonus_type_name.setter
    def bonus_type_name(self, bonus_type_name):
        """Sets the bonus_type_name of this DetailReportItem.

        Obosnovanie htrafov i doplat. <br> Pole budet v otvete pri nalihii znahenia   # noqa: E501

        :param bonus_type_name: The bonus_type_name of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._bonus_type_name = bonus_type_name

    @property
    def sticker_id(self):
        """Gets the sticker_id of this DetailReportItem.  # noqa: E501

        cifrovoe znahenie stikera, kotoryi kleitsa na tovar v processe sborki zakaza po sheme \"Marketpleis\"  # noqa: E501

        :return: The sticker_id of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._sticker_id

    @sticker_id.setter
    def sticker_id(self, sticker_id):
        """Sets the sticker_id of this DetailReportItem.

        cifrovoe znahenie stikera, kotoryi kleitsa na tovar v processe sborki zakaza po sheme \"Marketpleis\"  # noqa: E501

        :param sticker_id: The sticker_id of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._sticker_id = sticker_id

    @property
    def site_country(self):
        """Gets the site_country of this DetailReportItem.  # noqa: E501

        Strana prodahi  # noqa: E501

        :return: The site_country of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._site_country

    @site_country.setter
    def site_country(self, site_country):
        """Sets the site_country of this DetailReportItem.

        Strana prodahi  # noqa: E501

        :param site_country: The site_country of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._site_country = site_country

    @property
    def penalty(self):
        """Gets the penalty of this DetailReportItem.  # noqa: E501

        htrafy  # noqa: E501

        :return: The penalty of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._penalty

    @penalty.setter
    def penalty(self, penalty):
        """Sets the penalty of this DetailReportItem.

        htrafy  # noqa: E501

        :param penalty: The penalty of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._penalty = penalty

    @property
    def additional_payment(self):
        """Gets the additional_payment of this DetailReportItem.  # noqa: E501

        Doplaty  # noqa: E501

        :return: The additional_payment of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._additional_payment

    @additional_payment.setter
    def additional_payment(self, additional_payment):
        """Sets the additional_payment of this DetailReportItem.

        Doplaty  # noqa: E501

        :param additional_payment: The additional_payment of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._additional_payment = additional_payment

    @property
    def rebill_logistic_cost(self):
        """Gets the rebill_logistic_cost of this DetailReportItem.  # noqa: E501

        Vozmehenie izderhek po perevozke. Pole budet v otvete pri nalihii znahenia   # noqa: E501

        :return: The rebill_logistic_cost of this DetailReportItem.  # noqa: E501
        :rtype: float
        """
        return self._rebill_logistic_cost

    @rebill_logistic_cost.setter
    def rebill_logistic_cost(self, rebill_logistic_cost):
        """Sets the rebill_logistic_cost of this DetailReportItem.

        Vozmehenie izderhek po perevozke. Pole budet v otvete pri nalihii znahenia   # noqa: E501

        :param rebill_logistic_cost: The rebill_logistic_cost of this DetailReportItem.  # noqa: E501
        :type: float
        """

        self._rebill_logistic_cost = rebill_logistic_cost

    @property
    def rebill_logistic_org(self):
        """Gets the rebill_logistic_org of this DetailReportItem.  # noqa: E501

        Organizator perevozki. Pole budet v otvete pri nalihii znahenia.             # noqa: E501

        :return: The rebill_logistic_org of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._rebill_logistic_org

    @rebill_logistic_org.setter
    def rebill_logistic_org(self, rebill_logistic_org):
        """Sets the rebill_logistic_org of this DetailReportItem.

        Organizator perevozki. Pole budet v otvete pri nalihii znahenia.             # noqa: E501

        :param rebill_logistic_org: The rebill_logistic_org of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._rebill_logistic_org = rebill_logistic_org

    @property
    def kiz(self):
        """Gets the kiz of this DetailReportItem.  # noqa: E501

        Kod markirovki. <br> Pole budet v otvete pri nalihii znahenia   # noqa: E501

        :return: The kiz of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._kiz

    @kiz.setter
    def kiz(self, kiz):
        """Sets the kiz of this DetailReportItem.

        Kod markirovki. <br> Pole budet v otvete pri nalihii znahenia   # noqa: E501

        :param kiz: The kiz of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._kiz = kiz

    @property
    def srid(self):
        """Gets the srid of this DetailReportItem.  # noqa: E501

        Unikalnyi identifikator zakaza. Primehanie dla ispolzuuhih API Marketplace: `srid` raven `rid` v otvetah metodov sborohnyh zadanii.  # noqa: E501

        :return: The srid of this DetailReportItem.  # noqa: E501
        :rtype: str
        """
        return self._srid

    @srid.setter
    def srid(self, srid):
        """Sets the srid of this DetailReportItem.

        Unikalnyi identifikator zakaza. Primehanie dla ispolzuuhih API Marketplace: `srid` raven `rid` v otvetah metodov sborohnyh zadanii.  # noqa: E501

        :param srid: The srid of this DetailReportItem.  # noqa: E501
        :type: str
        """

        self._srid = srid

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DetailReportItem, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DetailReportItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
